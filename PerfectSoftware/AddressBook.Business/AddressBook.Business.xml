<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AddressBook.Business</name>
    </assembly>
    <members>
        <member name="T:PS.AddressBook.Business.Address">
            <summary>
            Address Business Class
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.Address.#ctor">
            <summary>
            Constructor for an empty Address.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.Address.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for a valid Address.
            </summary>
            <param name="street">Can not be null or empty</param>
            <param name="postalCode">Can not be null or empty</param>
            <param name="town">Can not be null or empty</param>
        </member>
        <member name="M:PS.AddressBook.Business.Address.Equals(PS.AddressBook.Business.Interfaces.IAddress)">
            <summary>
            Checks whether two addresses are equal.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.Add(PS.AddressBook.Business.Interfaces.IContact)">
            <summary>
            Adds a new Contact to the AddressBook in memory.
            </summary>
            <param name="newContact"></param>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.GetContact(System.String)">
            <summary>
            Finds the Contact with the given name.
            </summary>
            <param name="nameToFind"></param>
            <returns>null if the Contact Name is not found.</returns>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.Delete(System.String)">
            <summary>
            Deletes an existing Contact from the AddressBook in memory.
            </summary>
            <param name="nameToDelete"></param>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.Update(PS.AddressBook.Business.Interfaces.IContact)">
            <summary>
            Replaces the old Contact data with new Contact Data in the AddressBook.
            </summary>
            <param name="changedContact"></param>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.Load">
            <summary>
            Loads the AddresBook with the Contacts from an Xml File.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBook.Save">
            <summary>
            Writes the Contacts in the AddresBook in memory to an Xml File.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBookService.GetOverview(System.String)">
            <summary>
            Gives an overview of the Contacts in the AddressBook filtered.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:PS.AddressBook.Business.AddressBookService.Update(PS.AddressBook.Business.Interfaces.IContactDTO)">
            <summary>
            Changes an existing Contact from the AddressBook.
            </summary>
            <param name="changedContact"></param>
        </member>
        <member name="M:PS.AddressBook.Business.Contact.#ctor(PS.AddressBook.Business.AddressBook)">
            <summary>
            Constructor for Contact.
            </summary>
            <param name="addressBook"></param>
        </member>
        <member name="P:PS.AddressBook.Business.Contact.AddressBook">
            <summary>
            The AddressBook to which this Contact belongs.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.Contact.IsValid">
            <summary>
            Checks whether the Contact is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PS.AddressBook.Business.Contact.DeepClone">
            <summary>
            Creates a Deep Copy of this Contact.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PS.AddressBook.Business.Contact.Equals(PS.AddressBook.Business.Interfaces.IContact)">
            <summary>
            Determins whether a Contact is equal or not.
            </summary>
            <param name="other"></param>
            <returns>true if equal</returns>
            <remarks>This is needed to be able to remove a Contact from a list.</remarks>
        </member>
        <member name="T:PS.AddressBook.Business.ContactLineDTO">
            <summary>
            A ContactLine is a short overview of a Contact.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.ContactLineDTO.Id">
            <summary>
            A Unique Id for this ContactLine.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.ContactLineDTO.Name">
            <summary>
            The Unique Name of the Contact.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.ContactLineDTO.ContentsCode">
            <summary>
            A Code that gives an overview of the Contents of the Contact.
            </summary>
            <example>
            "APE" => Has Address, PhoneNumber and Email
            "**E" => Has only an Email.
            </example>     
        </member>
        <member name="T:PS.AddressBook.Business.Interfaces.IAddress">
            <summary>
            The interface for an adress.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IAddress.Street">
            <summary>
            The Street of the Address. Also contains number and box.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IAddress.PostalCode">
            <summary>
            A Code related with the Town.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IAddress.Town">
            <summary>
            The Town of the address.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.Interfaces.IAddress.IsValid">
            <summary>
            Checks whether the address is a valid address.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.ICommandResponse.IsTerminating">
            <summary>
            Is this a termination command ?
            </summary>
        </member>
        <member name="T:PS.AddressBook.Business.Interfaces.IConsole">
            <summary>
            Used for Mocking the real Console.
            </summary>
        </member>
        <member name="T:PS.AddressBook.Business.Interfaces.IContact">
            <summary>
            The Interface for the Contact Business Object.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IContact.Name">
            <summary>
            The Name of the Contact
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IContact.PhoneNumber">
            <summary>
            The Phone Number of the Contact.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IContact.ContentsCode">
            <summary>
            Gives a Code to show what data is available in this Contact.
            </summary>
        </member>
        <member name="M:PS.AddressBook.Business.Interfaces.IContact.IsValid">
            <summary>
            Flag whether this Contact contains valid data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PS.AddressBook.Business.Interfaces.IContact.DeepClone">
            <summary>
            Creates a Deep Copy of this Contact.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IContactLineDTO.Name">
            <summary>
            The Unique Name of the Contact.
            </summary>
        </member>
        <member name="P:PS.AddressBook.Business.Interfaces.IContactLineDTO.ContentsCode">
            <summary>
            A Code that gives an overview of the Contents of the Contact.
            </summary>
            <example>
            "APE" => Has Address, PhoneNumber and Email
            "**E" => Has only an Email.
            </example>
        </member>
    </members>
</doc>
