<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPIAddressBook</name>
    </assembly>
    <members>
        <member name="T:WebAPIAddressBook.Controllers.CreateContactController">
            <summary>
            WEB API Controller for Creating Contacts.
            </summary>
            <remarks>This Controller is also an WEB API adapter, it uses Ports.</remarks>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.CreateContactController.#ctor(PS.AddressBook.Hexagon.Application.UseCases.ICreateContactUseCase,Microsoft.Extensions.Logging.ILogger{WebAPIAddressBook.Controllers.UpdateContactController})">
            <summary>
            Constructor WEB API for managing Contacts.
            </summary>
            <param name="createContactService">Port for the CreateContactService</param>
            <param name="logger"></param>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.CreateContactController.Create(PS.AddressBook.Hexagon.Application.IContactDTO)">
            <summary>
            Creates a new Contact.
            </summary>
            <param name="newContact"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPIAddressBook.Controllers.DeleteContactController">
            <summary>
            WEB API Controller for managing Contacts.
            </summary>
            <remarks>This Controller is also an WEB API adapter, it uses Ports.</remarks>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.DeleteContactController.#ctor(PS.AddressBook.Hexagon.Application.UseCases.IDeleteContactUseCase,Microsoft.Extensions.Logging.ILogger{WebAPIAddressBook.Controllers.UpdateContactController})">
            <summary>
            Constructor WEB API adapter for Deleting a Contact.
            </summary>
            <param name="service">Port for the Delete Contact Service</param>
            <param name="logger"></param>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.DeleteContactController.Delete(System.String)">
            <summary>
            Deletes the Contact with the given Name from the AddressBook.
            </summary>
            <param name="name">Name of the Contact</param>
            <returns></returns>
        </member>
        <member name="T:WebAPIAddressBook.Controllers.GetContactWithNameController">
            <summary>
            WEB API Controller for managing Contacts.
            </summary>
            <remarks>This Controller is also an WEB API adapter, it uses Ports.</remarks>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.GetContactWithNameController.#ctor(PS.AddressBook.Hexagon.Application.UseCases.IGetContactWithNameQuery,Microsoft.Extensions.Logging.ILogger{WebAPIAddressBook.Controllers.UpdateContactController})">
            <summary>
            Constructor WEB API for managing Contacts.
            </summary>
            <param name="contactWithNameQuery">Port for the Contact GetContactWithNameQueryService</param>
            <param name="logger"></param>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.GetContactWithNameController.Get(System.String)">
            <summary>
            Gets the Contact with the given name from the addressbook.
            </summary>
            <param name="name">The name of the wanted contact.</param>
            <returns>the requested contact</returns>
        </member>
        <member name="T:WebAPIAddressBook.Controllers.GetOverviewController">
            <summary>
            WEB API Controller for managing Contacts.
            </summary>
            <remarks>This Controller is also an WEB API adapter, it uses Ports.</remarks>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.GetOverviewController.#ctor(PS.AddressBook.Hexagon.Application.UseCases.IGetOverviewQuery,Microsoft.Extensions.Logging.ILogger{WebAPIAddressBook.Controllers.UpdateContactController})">
            <summary>
            Constructor WEB API GetOverview Adapter for managing Contacts.
            </summary>
            <param name="overviewQuery">Port for the Contact OverviewQueryService</param>
            <param name="logger"></param>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.GetOverviewController.GetOverview(System.String)">
            <summary>
            Shows an overview of all Contacts in the addressbook filtered by filter which can be empty.
            </summary>
            <param name="filter">'a' starts with 'a'; '*de*' contains 'de'</param>
            <returns></returns>
        </member>
        <member name="T:WebAPIAddressBook.Controllers.UpdateContactController">
            <summary>
            WEB API Controller for Updating Contacts.
            </summary>
            <remarks>This Controller is also an WEB API adapter, it uses Ports.</remarks>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.UpdateContactController.#ctor(PS.AddressBook.Hexagon.Application.UseCases.IUpdateContactUseCase,PS.AddressBook.Hexagon.Application.UseCases.IGetContactWithNameQuery,Microsoft.Extensions.Logging.ILogger{WebAPIAddressBook.Controllers.UpdateContactController})">
            <summary>
            Constructor WEB API for managing Contacts.
            </summary>
            <param name="updateContactService">Port for the updateContactService</param>
            <param name="contactQueryService">Port for GetContactNameQuery</param>
            <param name="logger"></param>
        </member>
        <member name="M:WebAPIAddressBook.Controllers.UpdateContactController.Update(System.String,PS.AddressBook.Hexagon.Application.IContactDTO)">
            <summary>
            Changes the Data of an existing Contact except the Name.
            </summary>
            <param name="name">The name of an existing Contact.</param>
            <param name="changedContact">new values for the Contact.</param>
            <returns></returns>
        </member>
        <member name="T:WebAPIAddressBook.Program">
            <summary>
            This is the Web Application
            </summary>
        </member>
        <member name="M:WebAPIAddressBook.Program.Main(System.String[])">
            <summary>
            This is the method that starts and runs the Web Application.
            If this method  stops the application stops.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:WebAPIAddressBook.Startup">
            <summary>
            Contains all the configuration needed for the startup of the application.
            </summary>
        </member>
        <member name="M:WebAPIAddressBook.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor 
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:WebAPIAddressBook.Startup.Configuration">
            <summary>
            Holds a reference to the Settings of the Application.
            </summary>
        </member>
        <member name="M:WebAPIAddressBook.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebAPIAddressBook.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
